<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\whack-a-mole.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\whack-a-mole.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Fri Dec 06 22:42:42 2019
<BR><P>
<H3>Maximum Stack Usage =          0 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>

<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[5]">finish_round</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">Start_Game</a><BR>
 <LI><a href="#[4]">ReactTime_wait</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">ReactTime_wait</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1]">Reset_Handler</a> from whack-a-mole.o(MYCODE) referenced from whack-a-mole.o(RESET)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1]"></a>Reset_Handler</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, whack-a-mole.o(MYCODE))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_init
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClockInit
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_dark
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_start
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_for_player
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Normal_game_play
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[2]"></a>Normal_game_play</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, whack-a-mole.o(MYCODE))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrelimWait_time
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Game
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[3]"></a>Start_Game</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, whack-a-mole.o(MYCODE))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_dark
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED4
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED3
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED2
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED1
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrelimWait_time
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReactTime_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;finish_round
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Normal_game_play
</UL>

<P><STRONG><a name="[4]"></a>ReactTime_wait</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, whack-a-mole.o(MYCODE))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;End_Failure
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;finish_round
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReactTime_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReactTime_wait
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Game
</UL>

<P><STRONG><a name="[5]"></a>finish_round</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, whack-a-mole.o(MYCODE))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;End_Success
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Game
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReactTime_wait
</UL>

<P><STRONG><a name="[6]"></a>End_Failure</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, whack-a-mole.o(MYCODE))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED4
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED3
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_for_player
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;losing_Wait
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReactTime_wait
</UL>

<P><STRONG><a name="[7]"></a>End_Success</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, whack-a-mole.o(MYCODE))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED2
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED1
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_for_player
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Winning_Wait
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;finish_round
</UL>

<P><STRONG><a name="[8]"></a>losing_Wait</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, whack-a-mole.o(MYCODE))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;End_Failure
</UL>

<P><STRONG><a name="[9]"></a>Winning_Wait</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, whack-a-mole.o(MYCODE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;End_Success
</UL>

<P><STRONG><a name="[a]"></a>PrelimWait_time</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, whack-a-mole.o(MYCODE))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Game
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Normal_game_play
</UL>

<P><STRONG><a name="[b]"></a>Wait_for_player</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, whack-a-mole.o(MYCODE))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED4
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED3
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED2
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED1
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;End_Success
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;End_Failure
</UL>

<P><STRONG><a name="[c]"></a>check_start</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, whack-a-mole.o(MYCODE))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[d]"></a>LED1</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, whack-a-mole.o(MYCODE))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_for_player
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;End_Success
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Game
</UL>

<P><STRONG><a name="[e]"></a>LED2</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, whack-a-mole.o(MYCODE))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_for_player
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;End_Success
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Game
</UL>

<P><STRONG><a name="[f]"></a>LED3</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, whack-a-mole.o(MYCODE))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_for_player
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;End_Failure
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Game
</UL>

<P><STRONG><a name="[10]"></a>LED4</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, whack-a-mole.o(MYCODE))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_for_player
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;End_Failure
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Game
</UL>

<P><STRONG><a name="[11]"></a>delay</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, whack-a-mole.o(MYCODE))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[12]"></a>all_dark</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, whack-a-mole.o(MYCODE))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Game
</UL>

<P><STRONG><a name="[13]"></a>GPIO_ClockInit</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, whack-a-mole.o(MYCODE))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[14]"></a>GPIO_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, whack-a-mole.o(MYCODE))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
